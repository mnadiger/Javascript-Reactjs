
Understand these Git Commands to go from 0 ‚Üí to hero:
//***************************************

1Ô∏è‚É£ git init: Initialize the current directory as a Git repository, allowing version control for your project's files.

2Ô∏è‚É£ git clone <url>: Clone a Git repository from the specified URL onto your local machine, creating a copy of the entire repository.

3Ô∏è‚É£ git status: Display the list of modified files in the current directory and shows if they are staged for the next commit.

4Ô∏è‚É£ git log: View the commit history of the repository, displaying information about past commits and their authors.

5Ô∏è‚É£ git add -A: Stage all changed files in the current directory for the next commit, including new files and deletions.

6Ô∏è‚É£ git commit -m 'your message': Commit the staged changes with a descriptive message explaining the changes you made.

7Ô∏è‚É£ git pull origin main: Retrieve and merge the latest changes from the "main" branch of the remote repository into your local branch.

8Ô∏è‚É£ git push origin main: Push your committed changes to the remote "main" branch, making your local changes available to others.

9Ô∏è‚É£ git branch: List all the local branches in your repository.

üîü git merge develop: Merge the changes from the "develop" branch into your current branch.

1Ô∏è‚É£1Ô∏è‚É£ git branch <branch-name>: Create a new branch with the given name.

1Ô∏è‚É£2Ô∏è‚É£ git checkout <branch-name>: Switch from your current branch to the specified branch.

1Ô∏è‚É£3Ô∏è‚É£ git branch -m <new-branch-name>: Rename your current branch to a new name.

1Ô∏è‚É£4Ô∏è‚É£ git branch -d <branch-name>: Delete the specified branch locally (only if it's already merged).

1Ô∏è‚É£5Ô∏è‚É£ git rm <file-name>: Remove a file from the project and stage its removal for the next commit.

1Ô∏è‚É£6Ô∏è‚É£ git stash: Temporarily save your modified and staged changes so you can switch to a different branch without committing them.

1Ô∏è‚É£7Ô∏è‚É£ git diff <branch-A-name>...<branch-B-name>: Show the differences between two branches, indicating what is on <branch-A-name> but not on <branch-B-name>.

1Ô∏è‚É£8Ô∏è‚É£ git rebase <branch-name>: Rebase the current branch on top of the commits in <branch-name>, effectively putting your commits ahead.
